package com.greedy.section02.abstractclass;

public class Application {
	public static void main(String[] args) {
		
		/* 추상 클래스와 추상 메소드 */
		/*
		 * 추상 메소드를 0개 이상 포함하는 클래스를 추상 클래스라고 한다.
		 * (만약 추상 메소드가 1개라도 있다면 그 클래스는 반드시 추상 클래스여야 한다.)
		 * 추상 클래스는 선언부에 abstract 키워드를 명시해야 한다.
		 * 추상 클래스는 인스턴스를 생성할 수 없다.
		 * 추상 클래스를 사용하려면 추상 클래스를 상속 받은 하위 클래스를 이용해서 인스턴스를
		 * 생성해야 한다. 이 때 추상 클래스는 상위 타입(부모)으로 사용될 수 있으며, 다형성을
		 * 이용할 수 있다.
		 * 
		 * 추상 클래스에서 작성한 추상 메소드는 반드시 후손 클래스가 오버라이딩 해서 작성해야 하며
		 * (강제성 있는 규약), 후손 클래스들의 메소드들의 공통 인터페이스로의 역할을 수행할 수 있다.
		 * 추상 클래스에서 작성한 메소드를 호출하게 되면 실제 후손 타입의 인스턴스가 가지는
		 * 메소드는 다형성이 적용될 때 동적바인딩에 의해 다양한 응답을 처리할 수 있게 된다.
		 * 
		 * 추상 클래스를 상속 받아 구현할 때는 extends 키워드를 사용하며
		 * 자바에서는 extends로 클래스를 상속 받을 시 하나의 부모 클래스만 가질 수 있다.(단일 상속)
		 * 
		 * 추상 메소드란?
		 * 메소드의 선언부만 있고 구현부가 없는 메소드를 추상 메소드라고 한다.
		 * 추상 메소드의 경우 반드시 abstract 키워드를 작성해야 한다.
		 * ex)public abstract void method();
		 */
		
		/* 추상 클래스의 기본 생성자는 추상클래스의 객체를 만들 수 없다. */
//		Product product = new Product();
		
		/* 추상 클래스는 다형성 적용에서 사용되는 레퍼런스 타입으로 활용할 수 있다. */
		Product product = new SmartPhone();
		
		/* 동적바인딩에 의해 SmartPhone의 오버라이딩 한 메소드가 호출되는 것을 알 수 있다.(오버라이딩 O) */
		product.abstractMethod();
		
		/* 부모인 추상클래스가 가지는 일반적인 non-static 메소드와 static 메소드 호출(오버라이딩 X) */
		product.nonStaticMethod();
		
		Product.staticMethod();
	}
}
