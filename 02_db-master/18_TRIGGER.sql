-- 트리거(TRIGGER)
-- : 테이블에 INSERT, UPDATE, DELETE 등의 DML에 의해
--   변경될 때 자동으로 수행 할 내용을 정의하여 저장한 객체이다.
   
CREATE OR REPLACE TRIGGER TRG_01 AFTER
  INSERT ON EMPLOYEE
BEGIN
  DBMS_OUTPUT.PUT_LINE('신입사원이 입사했습니다.');
END;
/

INSERT
  INTO EMPLOYEE
(
  EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE
, DEPT_CODE, JOB_CODE, SAL_LEVEL, SALARY, BONUS
, MANAGER_ID, HIRE_DATE, ENT_DATE, ENT_YN
)
VALUES
(
  '910', '길성춘', '650512-1151432', 'gil_sc@greedy.or.kr', '01012341234'
, 'D5', 'J3', 'S5', 3000000, 0.1
, 201, SYSDATE, NULL, DEFAULT
);

SELECT * FROM EMPLOYEE;

-- 입출고 관련 예제 시작
CREATE TABLE PRODUCT(
  PCODE NUMBER PRIMARY KEY,
  PNAME VARCHAR2(30),
  BRAND VARCHAR2(30),
  PRICE NUMBER,
  STOCK NUMBER DEFAULT 0 CHECK(STOCK > 0)
);

CREATE TABLE PRO_DETAIL(
  DCODE NUMBER PRIMARY KEY,
  PCODE NUMBER,
  PDATE DATE,
  AMOUNT NUMBER,
  STATUS VARCHAR2(10) CHECK(STATUS IN ('입고', '출고')),
  FOREIGN KEY(PCODE) REFERENCES PRODUCT
);
 
CREATE SEQUENCE SEQ_PCODE;
CREATE SEQUENCE SEQ_DCODE;
 
INSERT
  INTO PRODUCT
(
  PCODE, PNAME, BRAND
, PRICE, STOCK
)
VALUES
(
  SEQ_PCODE.NEXTVAL, '갤럭시노트8', '삼송'
, 900000, DEFAULT
);

--SELECT * FROM PRODUCT;

INSERT
  INTO PRODUCT
(
  PCODE, PNAME, BRAND
, PRICE, STOCK
)
VALUES
(
  SEQ_PCODE.NEXTVAL, '아이펀11', '애펄'
, 100000, DEFAULT
);
 
INSERT
  INTO PRODUCT
(
  PCODE, PNAME, BRAND
, PRICE, STOCK
)
VALUES
(
  SEQ_PCODE.NEXTVAL, '대륙폰', '샤우미'
, 300000, DEFAULT
);

SELECT * FROM PRODUCT;
SELECT * FROM PRO_DETAIL;

-- 행 트리거: 컬럼의 각각의 행의 데이터에 행 변화가 생길 때마다 PL/SQL구문이 실행된다.(FOR EACH ROW 추가)
-- 문장 트리거: 트리거 사건에 의해 PL/SQL구문이 단 한번만 실행된다.(FOR EACH ROW 생략)
CREATE OR REPLACE TRIGGER TRG_02 AFTER
  INSERT ON PRO_DETAIL
  FOR EACH ROW
BEGIN
  IF :NEW.STATUS = '입고'
    THEN
      UPDATE PRODUCT A
         SET A.STOCK = A.STOCK + :NEW.AMOUNT
       WHERE A.PCODE = :NEW.PCODE;
  END IF;
  IF :NEW.STATUS = '출고'
    THEN
      UPDATE PRODUCT A
         SET A.STOCK = A.STOCK - :NEW.AMOUNT
       WHERE A.PCODE = :NEW.PCODE;    
  END IF;
END;
/

SELECT * FROM PRODUCT;
SELECT * FROM PRO_DETAIL;

INSERT
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 1, SYSDATE
, 5, '입고'
);
 
SELECT * FROM PRODUCT;
SELECT * FROM PRO_DETAIL;

INSERT
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 1, SYSDATE
, 2, '출고'
);

INSERT
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 2, SYSDATE
, 10, '입고'
);

SELECT * FROM PRODUCT;
SELECT * FROM PRO_DETAIL;

INSERT
  INTO PRO_DETAIL
(
  DCODE, PCODE, PDATE
, AMOUNT, STATUS
)
VALUES
(
  SEQ_DCODE.NEXTVAL, 2, SYSDATE
, 5, '출고'
);

-- INSERT문: 입력할 데이터 값은 :NEW.컬럼명에 지정 된다.
-- UPDATE문: 변경하기 전의 데이터 값은 :OLD.컬럼명이고, 수정할 경우 데이터 값은 :NEW.컬럼명으로 지정 된다.
-- DELETE문: 삭제되는 컬럼은 :OLD.컬럼명에 지정된다.

